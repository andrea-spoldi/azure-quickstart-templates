{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "West US",
            "allowedValues": ["East US", "West US", "West Europe", "East Asia", "South East Asia"],
            "metadata": { 
                 "description": "Location of resources" 
            } 
        },
        "newStorageAccountName": {
            "type": "string",
            "defaultValue": "storageaccount",
            "metadata": { 
                 "description": "Name of the storage account for VM OS Disks"
            } 
        },
        "dnsName": {
            "type": "string",
                "metadata": {
                      "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
                }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [ 
                "Standard_A1", 
                "Standard_A2", 
                "Standard_A3", 
                "Standard_A4" 
            ], 
            "metadata": { 
                 "description": "Instance size for the VMs"
            } 
        },
        "numberOfNodes": {
            "type": "int",
            "defaultValue": 3,
            "metadata": { 
                 "description": "Number of compute nodes to create"
            } 
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "core",
            "metadata": { 
                 "description": "Username to login to the VMs"
            } 
        },
        "sshKeyData": {
            "type": "string",
            "metadata": { 
                 "description": "Public key for SSH authentication"
            } 
        },
        "discoveryUrl": {
            "type": "string",
            "metadata": { 
                 "description": "Discovery url for Fleet cluster"
            } 
        },
        "APPport": {
            "type": "int",
            "defaultValue": 80
        }
    },
    "variables": {
        "virtualNetworkName": "ClusterVNET",
        "addressPrefix": "10.0.0.0/16",
        "subnet1Name": "Subnet-1",
        "subnet1Prefix": "10.0.0.0/24",
        "publicIPAddressType": "Dynamic",
        "publicIPAddressName": "[concat('publicIPfor', parameters('dnsName'))]",
        "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',variables('subnet1Name'))]",
        "vmNamePrefix": "coreos",
        "loadBalancerName": "[concat('LBfor',parameters('dnsName'))]",
        "nicName" : "networkInterface1",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
        "nicId": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "backEndIPConfigID": "[concat(variables('nicId'),'/ipConfigurations/ipconfig1')]",
        "lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/loadBalancerBackEnd')]",
        "lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
        "imageSku": "Alpha",
        "vmStorageAccountContainerName": "vhds",
        "storageAccountType": "Standard_LRS",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "unitFile": "[concat('#cloud-config\n\ncoreos:\n  etcd:\n    discovery: ', parameters('discoveryUrl'),'\n    addr: $private_ipv4:4001\n    peer-addr: $private_ipv4:7001\n  units:\n    - name: etcd.service\n      command: start\n    - name: fleet.service\n      command: start')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet1Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('nic', copyindex())]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('numberOfNodes')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
            ],
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('lbID'),'/backendAddressPools/loadBalancerBackEnd')]"
                             }
                            ],
                            "loadBalancerInboundNatRules": [
                            {
                                    "id": "[concat(variables('lbID'),'/inboundNatRule/SSH-Node',copyindex())]"                           
                             }
                           ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmNamePrefix'), copyindex())]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('numberOfNodes')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', 'nic', copyindex())]"
            ],
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('vmNamePrefix'), copyindex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "customData": "[base64(variables('unitFile'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('sshKeyData')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "CoreOS",
                        "offer": "CoreOS",
                        "sku": "[variables('imageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmNamePrefix'), copyindex())]",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/',variables('vmNamePrefix'), copyindex(),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('nic',copyindex()))]"
                        }
                    ]
                }
            }
        },
        {
        "apiVersion": "2015-05-01-preview",
        "name": "[variables('loadBalancerName')]",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
        ],
        "properties": {
            "frontendIPConfigurations": [{
                "name": "loadBalancerFrontEnd",
                "properties": {
                    "publicIPAddress": {
                        "id": "[variables('publicIPAddressID')]"
                    }
                }
            }],
            "backendAddressPools": [{
                    "name": "loadBalancerBackEnd"
                }

            ],
            "inboundNatRules": [{
                "name": "SSH-Node1",
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[variables('frontEndIPConfigID')]"
                    },
                    "protocol": "tcp",
                    "frontendPort": 2201,
                    "backendPort": 22,
                    "enableFloatingIP": false
                }
            },
            {
                "name": "SSH-Node2",
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[variables('frontEndIPConfigID')]"
                    },
                    "protocol": "tcp",
                    "frontendPort": 2202,
                    "backendPort": 22,
                    "enableFloatingIP": false
                }
            },
            {
                "name": "SSH-Node3",
                "properties": {
                    "frontendIPConfiguration": {
                        "id": "[variables('frontEndIPConfigID')]"
                    },
                    "protocol": "tcp",
                    "frontendPort": 2203,
                    "backendPort": 22,
                    "enableFloatingIP": false
                }
            }],
               "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbPoolID')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbProbeID')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 80,
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2"
                        }
                    }
                ]
        }
      }
  ]
}